<!doctype html>
<html lang="pt-br">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1" crossorigin="anonymous">
    <title>CRUD RavenDB</title>
</head>

<body class="bg-dark">
    <nav class="navbar navbar-expand-lg navbar-light bg-light mb-5">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">CRUD RavenDB</a>

            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent"
                aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/autores">Autores</span></a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/livros">Livros</span></a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <div class="container">
        {% block content %}
        <main class="text-light">
            <h1>CRUD RavenDB</h1>
            Aplicação para demonstrar o uso do SGBD NoSQL <a href="https://ravendb.net">RavenDB</a>.
            Feita em Python, utilizando o microframework Flask como servidor web e o cliente oficial
            do RavenDB em Python (PyRavenDB) como cliente para o banco de dados.
        </main>
        {% endblock %}
    </div>

    <div class="modal fade" id="modal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">{% block modal_title %}{% endblock %}</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    {% block modal_body %}{% endblock %}
                </div>
                <div class="modal-footer">
                    {% block modal_footer %}
                        <button class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button class="btn btn-primary">Save changes</button>
                    {% endblock %}
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="modal-edit-livro" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Editar Livro</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <label for="edit-titulo" class="form-label">Título</label>
                    <input id="edit-titulo" class="form-control mb-3" 
                        type="text" placeholder="Título do Livro">

                    <label for="edit-ano" class="form-label">Ano de Lançamento</label>
                    <input id="edit-ano" class="form-control mb-3" type="number" placeholder="ex: 1958">

                    <input id="edit-livro" type="text" hidden>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button class="btn btn-primary" onclick="editarLivro()">Salvar</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="modal-edit-autor" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Editar Autor(a)</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <label for="edit-nome" class="form-label">Nome</label>
                    <input id="edit-nome" class="form-control mb-3" 
                        type="text" placeholder="Nome">

                    <input id="edit-autor" type="text" hidden>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button class="btn btn-primary" onclick="editarAutor()">Salvar</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW" crossorigin="anonymous">
    </script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
</body>

<script>
    const baseUrl = 'http://localhost:5000/';

    function novoAutor() {
        let nome = document.getElementById('nome_autor').value;
        axios.post(baseUrl + 'autor', {nome: nome})
            .then(res => {
                if(res.status == 201) {
                    window.location.reload();
                }
            }).catch(err => console.log(err));
    }

    const postLivro = (livro) => {
        axios.post(baseUrl + 'livro', livro)
            .then(res => {
                if(res.status == 201) {
                    window.location.reload();
                }
            }).catch(err => console.log(err));
    }

    function novoLivro() {
        let titulo = document.getElementById('titulo').value;
        let ano = parseInt(document.getElementById('ano').value);
        let autor = document.getElementById('select-autor').value;

        let livro = {
            titulo: titulo,
            ano: ano,
            autor: autor
        };
        postLivro(livro);
    }

    function novoLivroAutor() {
        let titulo = document.getElementById('tituloA').value;
        let ano = parseInt(document.getElementById('anoA').value);
        let autor = document.getElementById('autorA').value;

        let livro = {
            titulo: titulo,
            ano: ano,
            autor: autor
        };
        postLivro(livro);
    }

    function excluirAutor(id_autor) {
        axios.delete(baseUrl + 'autor/del/' + id_autor)
            .then(res => {
                if(res.status == 200) {
                    window.location.reload();
                }
            }).catch(err => console.log(err));
    }

    function excluirLivro(id_livro) {
        axios.delete(baseUrl + 'livro/' + id_livro)
            .then(res => {
                if(res.status == 200) {
                    window.location.reload();
                }
            }).catch(err => console.log(err));
    }

    function modalLivro(id_livro, titulo, ano) {
        document.getElementById('edit-livro').value = id_livro;
        document.getElementById('edit-titulo').value = titulo;
        document.getElementById('edit-ano').value = ano;
    }

    function editarLivro() {
        let id_livro = document.getElementById('edit-livro').value;
        let titulo = document.getElementById('edit-titulo').value;
        let ano = document.getElementById('edit-ano').value;

        const livro = {
            livro: id_livro,
            titulo: titulo,
            ano: ano
        };

        axios.put(baseUrl + 'livro', livro)
            .then(res => {
                    if(res.status == 200) {
                        window.location.reload();
                    }
                }).catch(err => console.log(err));
    }

    function modalAutor(id_autor, nome) {
        document.getElementById('edit-autor').value = id_autor;
        document.getElementById('edit-nome').value = nome;
    }

    function editarAutor() {
        let id_autor = document.getElementById('edit-autor').value;
        let nome = document.getElementById('edit-nome').value;

        const autor = {
            autor: id_autor,
            nome: nome,
        };

        axios.put(baseUrl + 'autor', autor)
            .then(res => {
                    if(res.status == 200) {
                        window.location.reload();
                    }
                }).catch(err => console.log(err));
    }
</script>

</html>